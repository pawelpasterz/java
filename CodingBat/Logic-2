public class Logic2 {
    public static int makeChocolate(int small, int big, int goal) {
        if (small + big * 5 < goal) return -1;
        if (goal % 5 == 0 && big >= goal / 5) return 0;
        if (big > goal / 5)
            return goal % 5 <= small ? goal % 5 : -1;
        if (goal - big * 5 <= small) return goal - big * 5;
        return -1;
    }
    public static boolean evenlySpaced(int a, int b, int c) {
        int max = a > b ? (a > c ? a : c) : (b > c ? b : c);
        int min = a < b ? (a < c ? a : c) : (b < c ? b : c);
        int mid = a + b + c - max - min;
        return max - mid == mid - min;
    }
    public static int blackjack(int a, int b) {
        if (a > 21 && b > 21) return 0;
        int aDist = 21 - a;
        int bDist = 21 - b;
        if (aDist < 0)
            return b;
        if (bDist < 0)
            return a;
        return aDist > bDist ? b : a;
    }
    public static boolean closeFar(int a, int b, int c) {
        if (Math.abs(a - b) <= 1 && Math.abs(a - c) >= 2 && Math.abs(b - c) >= 2) return true;
        if (Math.abs(a - c) <= 1 && Math.abs(a - b) >= 2 && Math.abs(b - c) >= 2) return true;
        return false;
    }
    public static int roundSum(int a, int b, int c) {

        return round10(a) + round10(b) + round10(c);
    }
    //roundSum helper
    private static int round10(int n) {
        return n % 10 >= 5 ? ((n / 10) + 1) * 10 : (n / 10) * 10;
    }
    public static int noTeenSum(int a, int b, int c) {
        int[] temp = {a, b, c};
        int sum = 0;
        for (int e : temp) sum += ((e >= 13 && e < 15) || (e > 16 && e <= 19)) ? 0 : e;
        return sum;
    }
    public static int luckySum(int a, int b, int c) {
        if (a == 13) return 0;
        if (b == 13) return a;
        if (c == 13) return a + b;
        return a + b + c;
    }
    public static int loneSum(int a, int b, int c) {
        if (a == b) {
            if (a == c)
                return 0;
            return c;
        }
        if (a == c)
            return b;
        if (b == c)
            return a;
        return a + b + c;
    }
    //New approach
    public static boolean makeBricks2(int small, int big, int goal) {
        if (small +  big * 5 < goal) return false;
        if (goal % 5 > small) return false;
        return true;
    }
    public static boolean makeBricks(int small, int big, int goal) {
        int temp = goal / 5;
        if (goal % 5 == 0)
            if (big >= temp)
                return true;
        if (goal <= small)
            return true;
        if (big * 5 > goal) {
            if (goal % 5 <= small)
                return true;
        } else {
            if (goal - 5 * big <= small)
                return true;
        }
        return false;
    }
    public static void sh(Object ob) {
        System.out.println(ob);
    }
}
